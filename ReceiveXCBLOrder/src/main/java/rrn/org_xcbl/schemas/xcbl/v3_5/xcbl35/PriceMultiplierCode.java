//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.04.04 at 03:22:36 PM IST 
//


package rrn.org_xcbl.schemas.xcbl.v3_5.xcbl35;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PriceMultiplierCode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PriceMultiplierCode">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="CostMarkupMultiplier-OriginalCost"/>
 *     &lt;enumeration value="CostMarkupMultiplier-RetailCost"/>
 *     &lt;enumeration value="DiscountMultiplier"/>
 *     &lt;enumeration value="CostMarkupMultiplier-WholesaleCost"/>
 *     &lt;enumeration value="PercentSolutionMultiplier"/>
 *     &lt;enumeration value="SellingMultiplier"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PriceMultiplierCode")
@XmlEnum
public enum PriceMultiplierCode {

    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("CostMarkupMultiplier-OriginalCost")
    COST_MARKUP_MULTIPLIER_ORIGINAL_COST("CostMarkupMultiplier-OriginalCost"),
    @XmlEnumValue("CostMarkupMultiplier-RetailCost")
    COST_MARKUP_MULTIPLIER_RETAIL_COST("CostMarkupMultiplier-RetailCost"),
    @XmlEnumValue("DiscountMultiplier")
    DISCOUNT_MULTIPLIER("DiscountMultiplier"),
    @XmlEnumValue("CostMarkupMultiplier-WholesaleCost")
    COST_MARKUP_MULTIPLIER_WHOLESALE_COST("CostMarkupMultiplier-WholesaleCost"),
    @XmlEnumValue("PercentSolutionMultiplier")
    PERCENT_SOLUTION_MULTIPLIER("PercentSolutionMultiplier"),
    @XmlEnumValue("SellingMultiplier")
    SELLING_MULTIPLIER("SellingMultiplier");
    private final String value;

    PriceMultiplierCode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PriceMultiplierCode fromValue(String v) {
        for (PriceMultiplierCode c: PriceMultiplierCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
